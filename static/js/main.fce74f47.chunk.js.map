{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","completed","title","classNames","type","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","isCompleted","query","undefined","filter","toLowerCase","includes","TodoFilter","setQuery","setTodos","useState","setFilter","onChange","event","selectedValue","target","value","placeholder","userQuery","style","pointerEvents","Loader","TodoModal","user","setUser","loading","setLoading","useEffect","userId","finally","href","name","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fce74f47.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (t: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const { id, completed, title } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed\n                  && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-danger': !completed,\n                  'has-text-success': completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far', {\n                        'fa-eye': id !== selectedTodo?.id,\n                        'fa-eye-slash': id === selectedTodo?.id,\n                      },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = (isCompleted?: boolean, query = '') => {\n  return get<Todo[]>('/todos')\n    .then(todos => {\n      if (isCompleted === undefined) {\n        return todos;\n      }\n\n      return todos.filter(({ completed }) => completed === isCompleted);\n    })\n    .then((todos) => todos.filter(\n      ({ title }) => title.toLowerCase().includes(query.toLowerCase()),\n    ));\n};\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useState } from 'react';\nimport { getTodos } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  setQuery: (query: string) => void,\n  query: string,\n  setTodos: (todos: Todo[]) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setQuery,\n  query,\n  setTodos,\n}) => {\n  const [filter, setFilter] = useState<boolean | undefined>(undefined);\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedValue = event.target.value;\n\n    if (selectedValue === 'active') {\n      getTodos(false).then(setTodos);\n      setFilter(false);\n    } else if (selectedValue === 'completed') {\n      getTodos(true).then(setTodos);\n      setFilter(true);\n    } else {\n      getTodos().then(setTodos);\n      setFilter(undefined);\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const userQuery = event.target.value;\n\n    setQuery(userQuery);\n    getTodos(filter, userQuery).then(setTodos);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleFilterChange}>\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n            <option\n              value=\"completed\"\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query\n            && (\n              /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  setQuery('');\n                  getTodos().then(setTodos);\n                }}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  id: number,\n  todo: Todo,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ id, todo, setSelectedTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    getUser(id)\n      .then(setUser)\n      .finally(() => setLoading(false));\n  }, [id]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setQuery={setQuery}\n                query={query}\n                setTodos={setTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              {!loading\n                && (\n                  <TodoList\n                    todos={todos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n        && (\n          <TodoModal\n            id={selectedTodo.userId}\n            todo={selectedTodo}\n            setSelectedTodo={setSelectedTodo}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}